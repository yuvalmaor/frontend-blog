name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Trigger this action on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get the latest version from DockerHub
        id: get-latest-version
        run: |
          LATEST_VERSION=$(curl -s https://hub.docker.com/v2/repositories/ym5533/blogfrontend/tags | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -1)
          if [ -z "$LATEST_VERSION" ]; then
            LATEST_VERSION="0.0.0"  # Default to 0.0.0 if no versions exist
          fi
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Increment the patch version
        id: increment-version
        run: |
          LATEST_VERSION=${{ env.LATEST_VERSION }}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_VERSION"
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ym5533/blogfrontend:${{ env.NEW_VERSION }} .

      - name: Push Docker image to DockerHub
        run: |
          docker push ym5533/blogfrontend:${{ env.NEW_VERSION }}

      - name: List Docker images
        run: |
          docker images
